{"ast":null,"code":"import _classCallCheck from \"/Applications/XAMPP/xamppfiles/htdocs/softtek-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/XAMPP/xamppfiles/htdocs/softtek-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Applications/XAMPP/xamppfiles/htdocs/softtek-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Applications/XAMPP/xamppfiles/htdocs/softtek-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Applications/XAMPP/xamppfiles/htdocs/softtek-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Applications/XAMPP/xamppfiles/htdocs/softtek-test/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/softtek-test/src/components/CreateUserForm.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nvar CreateUserForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreateUserForm, _React$Component);\n\n  function CreateUserForm() {\n    var _this;\n\n    _classCallCheck(this, CreateUserForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateUserForm).call(this));\n    _this.state = {\n      showForm: false,\n      captionReg: \"Register a new user\",\n      captionClose: \"Close form\",\n      caption: \"Register a new user\",\n      hasError: true,\n      errors: \"\",\n      errorCount: 0\n    };\n    _this.toggleRegForm = _this.toggleRegForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.inputHandling = _this.inputHandling.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CreateUserForm, [{\n    key: \"toggleRegForm\",\n    value: function toggleRegForm() {\n      var regForm = document.getElementById(\"regForm\");\n      this.setState({\n        showForm: !this.state.showForm\n      });\n      this.setState({\n        caption: this.state.showForm ? this.state.captionClose : this.state.captionReg\n      });\n      ReactDOM.findDOMNode(regForm).style.display = this.state.showForm ? \"block\" : \"none\";\n    }\n  }, {\n    key: \"inputHandling\",\n    value: function inputHandling(e) {\n      var val = e.target.value;\n      var result = true,\n          regExp,\n          err = \"\";\n\n      if (val.length === 0) {\n        result = false;\n        err = \"* Make sure to complete all the fields.\";\n      } else if (val.length > 30) {\n        result = false;\n        err = \"* One or more fields has more than 30 characters.\";\n      } else {\n        switch (e.target.name) {\n          case \"txtAddress\":\n            regExp = /^[a-zA-Z0-9\\s,'-]*$/;\n            break;\n\n          case \"txtMail\":\n            regExp = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            break;\n\n          case \"txtMobile\":\n            regExp = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n            break;\n\n          case \"txtFirstName\":\n          case \"txtLastName\":\n          default:\n            regExp = /^[a-zA-Z]*$/;\n            break;\n        }\n\n        result = regExp.test(val);\n      }\n\n      if (!result) {\n        e.target.classList.add(\"has-error\");\n\n        if (err.length === 0) {\n          err = \"* Make sure to enter valid data for all the inputs\";\n        }\n      } else {\n        e.target.classList.remove('has-error');\n      }\n\n      this.setState({\n        errors: err\n      });\n      this.setState({\n        hasError: !result\n      });\n      this.setState({\n        errorCount: result ? this.state.errorCount - 1 : this.state.errorCount + 1\n      });\n      console.dir(this.state.errorCount);\n    }\n  }, {\n    key: \"submit\",\n    value: function submit(e) {\n      if (!this.state.hasError) {\n        var user = {\n          \"firstName\": document.getElementById(\"txtFirstName\").innerText,\n          \"lastName\": document.getElementById(\"txtLastName\").innerText,\n          \"address\": document.getElementById(\"txtAddress\").innerText,\n          \"mail\": document.getElementById(\"txtMail\").innerText,\n          \"phone\": document.getElementById(\"txtMobile\").innerText\n        };\n        this.props.addUser(user);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-link\",\n        onClick: this.toggleRegForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.state.caption), React.createElement(\"form\", {\n        className: \"form-group\",\n        id: \"regForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"txtFirstName\",\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"First name\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"txtFirstName\",\n        className: \"form-control col-md-4\",\n        maxLength: \"30\",\n        onChange: this.inputHandling,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"txtLastName\",\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Last name\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"txtLastName\",\n        className: \"form-control col-md-4\",\n        maxLength: \"30\",\n        onChange: this.inputHandling,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"txtAddress\",\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Address\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"txtFirstName\",\n        className: \"form-control col-md-4\",\n        maxLength: \"30\",\n        onChange: this.inputHandling,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"txtMobile\",\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Mobile\"), React.createElement(\"input\", {\n        type: \"tel\",\n        name: \"txtMobile\",\n        className: \"form-control col-md-4\",\n        maxLength: \"30\",\n        onChange: this.inputHandling,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"txtMail\",\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Mail\"), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"txtMail\",\n        className: \"form-control col-md-4\",\n        maxLength: \"30\",\n        onChange: this.inputHandling,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"col-md-2 btn btn-success center-block\",\n        disabled: this.state.hasError,\n        onClick: this.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Save\")), React.createElement(\"label\", {\n        className: \"error-lbl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, this.state.errors)));\n    }\n  }]);\n\n  return CreateUserForm;\n}(React.Component);\n\nexport default CreateUserForm;","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/softtek-test/src/components/CreateUserForm.js"],"names":["React","ReactDOM","CreateUserForm","state","showForm","captionReg","captionClose","caption","hasError","errors","errorCount","toggleRegForm","bind","inputHandling","submit","regForm","document","getElementById","setState","findDOMNode","style","display","e","val","target","value","result","regExp","err","length","name","test","classList","add","remove","console","dir","user","innerText","props","addUser","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass CreateUserForm extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            showForm: false,\n            captionReg: \"Register a new user\",\n            captionClose: \"Close form\",\n            caption: \"Register a new user\",\n            hasError: true,\n            errors: \"\",\n            errorCount: 0\n        };\n\n        this.toggleRegForm = this.toggleRegForm.bind(this);\n        this.inputHandling = this.inputHandling.bind(this);\n        this.submit = this.submit.bind(this);\n    }\n\n    toggleRegForm() {\n        const regForm = document.getElementById(\"regForm\");\n\n        this.setState({showForm: !this.state.showForm});\n        this.setState({caption: this.state.showForm ? this.state.captionClose : this.state.captionReg});\n\n        ReactDOM.findDOMNode(regForm).style.display = this.state.showForm ? \"block\" : \"none\";\n    }\n\n    inputHandling(e) {\n        const val = e.target.value;\n        let result = true,\n            regExp,\n            err = \"\";\n\n        if (val.length === 0) {\n            result = false;\n            err = \"* Make sure to complete all the fields.\";\n        } else if (val.length > 30) {\n            result = false;\n            err = \"* One or more fields has more than 30 characters.\";\n        } else {\n\n            switch (e.target.name) {\n                case \"txtAddress\":\n                    regExp = /^[a-zA-Z0-9\\s,'-]*$/;\n                    break;\n                case \"txtMail\":\n                    regExp = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                    break;\n                case \"txtMobile\":\n                    regExp = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n                    break;\n                case \"txtFirstName\":\n                case \"txtLastName\":\n                default:\n                    regExp = /^[a-zA-Z]*$/;\n                    break;\n\n            }\n\n            result = regExp.test(val);\n        }\n\n        if (!result) {\n            e.target.classList.add(\"has-error\");\n            if (err.length === 0) {\n                err = \"* Make sure to enter valid data for all the inputs\";\n            }\n        } else {\n            e.target.classList.remove('has-error');\n        }\n\n        this.setState({errors: err});\n        this.setState({hasError: !result});\n        this.setState({errorCount: (result ? this.state.errorCount - 1 : this.state.errorCount + 1)});\n\n        console.dir(this.state.errorCount)\n    }\n\n    submit(e) {\n        if (!this.state.hasError) {\n            const user = {\n                \"firstName\": document.getElementById(\"txtFirstName\").innerText,\n                \"lastName\": document.getElementById(\"txtLastName\").innerText,\n                \"address\": document.getElementById(\"txtAddress\").innerText,\n                \"mail\": document.getElementById(\"txtMail\").innerText,\n                \"phone\": document.getElementById(\"txtMobile\").innerText\n            };\n\n            this.props.addUser(user);\n        }\n    }\n\n    render() {\n        return (\n            <section>\n                <button type=\"button\" className=\"btn btn-link\"\n                        onClick={this.toggleRegForm}>{this.state.caption}</button>\n                <form className=\"form-group\" id=\"regForm\">\n                    <div className=\"row\">\n                        <label htmlFor=\"txtFirstName\" className=\"col-md-2\">First\n                            name</label>\n                        <input type=\"text\" name=\"txtFirstName\" className=\"form-control col-md-4\" maxLength=\"30\"\n                               onChange={this.inputHandling}/>\n                    </div>\n                    <div className=\"row\">\n                        <label htmlFor=\"txtLastName\" className=\"col-md-2\">Last\n                            name</label>\n                        <input type=\"text\" name=\"txtLastName\" className=\"form-control col-md-4\" maxLength=\"30\"\n                               onChange={this.inputHandling}/>\n                    </div>\n                    <div className=\"row\">\n                        <label htmlFor=\"txtAddress\" className=\"col-md-2\">Address</label>\n                        <input type=\"text\" name=\"txtFirstName\" className=\"form-control col-md-4\" maxLength=\"30\"\n                               onChange={this.inputHandling}/>\n                    </div>\n                    <div className=\"row\">\n                        <label htmlFor=\"txtMobile\" className=\"col-md-2\">Mobile</label>\n                        <input type=\"tel\" name=\"txtMobile\" className=\"form-control col-md-4\" maxLength=\"30\"\n                               onChange={this.inputHandling}/>\n                    </div>\n                    <div className=\"row\">\n                        <label htmlFor=\"txtMail\" className=\"col-md-2\">Mail</label>\n                        <input type=\"email\" name=\"txtMail\" className=\"form-control col-md-4\" maxLength=\"30\"\n                               onChange={this.inputHandling}/>\n                    </div>\n                    <div className=\"row\">\n                        <button type=\"button\" className=\"col-md-2 btn btn-success center-block\"\n                                disabled={this.state.hasError}\n                                onClick={this.submit}>Save\n                        </button>\n                    </div>\n                    <label className=\"error-lbl\">{this.state.errors}</label>\n                </form>\n            </section>\n        );\n    }\n}\n\nexport default CreateUserForm;"]},"metadata":{},"sourceType":"module"}